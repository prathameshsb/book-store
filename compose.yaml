# specify the version of docker-compose
version: "3.8"

# define the services/containers to be run
services:
  # define the client service
  # we can use any name for the service. A standard naming convention is to use "web" for the client
  web:
    # we use depends_on to specify that service depends on another service
    # in this case, we specify that the web depends on the api service
    # this means that the api service will be started before the web service
    depends_on: 
      - api
    # specify the build context for the web service
    # this is the directory where the Dockerfile for the web service is located
    build: ./client
    # specify the ports to expose for the web service
    # the first number is the port on the host machine
    # the second number is the port inside the container
    ports:
      - 5173:5173
    # specify the environment variables for the web service
    # these environment variables will be available inside the container
    environment:
      VITE_API_URL: http://localhost:3000

    # this is for docker compose watch mode
    # anything mentioned under develop will be watched for changes by docker compose watch and it will perform the action mentioned
    develop:
      # we specify the files to watch for changes
      watch:
        # it'll watch for changes in package.json and package-lock.json and rebuild the container if there are any changes
        - path: ./client/package.json
          action: rebuild
        - path: ./client/package-lock.json
          action: rebuild
        # it'll watch for changes in the client directory and sync the changes with the container real time
        - path: ./client
          target: /app
          action: sync

  # define the api service/container
  api: 
    # The api service originally depended on the db service
    # but now connects to MongoDB Atlas, so no local db dependency
    
    # specify the build context for the api service
    build: ./server
    
    # specify the ports to expose for the api service
    # the first number is the port on the host machine
    # the second number is the port inside the container
    ports: 
      - 3000:3000

    # specify environment variables for the api service
    # for demo purposes, we're using a local mongodb instance
    environment: 
      # Connects to MongoDB Atlas instead of a local MongoDB instance
      # Ensure this URL is kept secure and not exposed in version control
      DB_URL: "mongodb+srv://prathameshsbpb:DgJtg7QIvvuIysfO@intuit-craft-demo.ogykvta.mongodb.net/?retryWrites=true&w=majority"
    
    # establish docker compose watch mode for the api service
    develop:
      # specify the files to watch for changes
      watch:
        # it'll watch for changes in package.json and package-lock.json and rebuild the container and image if there are any changes
        - path: ./server/package.json
          action: rebuild
        - path: ./server/package-lock.json
          action: rebuild
        
        # it'll watch for changes in the server directory and sync the changes with the container real time
        - path: ./server
          target: /app
          action: sync
# As we are using MongoDB Atlas, the local db service is not required.
# No volumes are needed for the API and web services in this setup.